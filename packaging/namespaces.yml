#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
apiVersion: kappctrl.k14s.io/v1alpha1
kind: App
metadata:
  name: namespaces
  namespace: tap-install
spec:
  serviceAccountName: tap-install-gitops-sa
  fetch:
  - inline:
      paths:
        config.yaml: |
          #@ load("@ytt:data", "data")
          #@ for ns in data.values.namespaces:
          ---
          apiVersion: v1
          kind: Namespace
          metadata:
            name: #@ ns.name
            labels:
              apps.tanzu.vmware.com/tap-ns: ""
          #@ end
  template:
  - ytt:
      inline:
        pathsFrom:
          - configMapRef:
              name: desired-namespaces
  deploy:
  - kapp: 
      rawOptions: 
      - --diff-changes=true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: desired-namespaces
  namespace: tap-install
data:
  namespaces.yaml: |
    #@data/values 
    ---
    namespaces: #@ some_yaml()
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: desired-namespaces
  namespace: tap-namespace-provisioning
  annotations:
    kapp.k14s.io/create-strategy: fallback-on-update
    namespace-provisioner.apps.tanzu.vmware.com/no-overwrite: "" #! This annotation tells the provisioner app to not override this configMap as this is your desired state.
data:
  namespaces.yaml: #@ yaml.encode({"namespaces": data.values.namespaces })